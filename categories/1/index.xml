<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>1 on ExampleSite</title>
    <link>https://blog.jk2077.com/categories/1/</link>
    <description>Recent content in 1 on ExampleSite</description>
    <image>
      <title>ExampleSite</title>
      <url>https://blog.jk2077.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://blog.jk2077.com/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 04 Mar 2023 11:06:11 +0000</lastBuildDate><atom:link href="https://blog.jk2077.com/categories/1/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何使用Hugo搭建博客</title>
      <link>https://blog.jk2077.com/posts/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</link>
      <pubDate>Sat, 04 Mar 2023 11:06:11 +0000</pubDate>
      
      <guid>https://blog.jk2077.com/posts/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</guid>
      <description>环境配置 博主本人目前使用的系统为Window11，如希望使用Hugo，需要先下载对应的编译器
编译器地址：Release v0.111.1 · gohugoio/hugo (github.com)
下载完后需要配置环境路径，可以参考这里：教你四步配置Hugo环境_hugo配置环境
完成上述配置后，可以在CMD中输入以下命令验证是否配置成功
hugo version 创建网站 创建一个新的站点，这里我命名为Blog,Hugo默认配置文件后缀为toml,这里PaperMod设置了参数，使用yml方案。
hugo new site Blog -f yml 主题配置 Hugo社区主题较为丰富，这里我选择了PaperMod主题，也是本博客所使用的主题。
参考他们主题安装方案地址：Installation · adityatelange/hugo-PaperMod Wiki (github.com)
这里选择第二种安装方案，使用submodule来安装，便于后续主题更新。
git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically) 之后在config.yml中修改字段theme:PaperMod即可。
Hugo主题一般会提供范例配置文件，PaperMod的范例文件参考：hugo-PaperMod/config.yml at exampleSite · adityatelange/hugo-PaperMod (github.com)
直接将它复制到你的config.yml即可。
绑定域名 如需绑定自己的域名，将config.yml中的baseURL修改为自己的域名，例如https://blog.jk2077.com/,路径最后的/注意不要忽略。
之后Github Page中添加自定义域名，域名商添加CNAME解析即可。
生成文章 输入命令如下
hugo new posts/first-post.md 第一篇文章便生成了，文章位于目录posts之下。</description>
    </item>
    
    <item>
      <title>空洞骑士</title>
      <link>https://blog.jk2077.com/posts/%E7%A9%BA%E6%B4%9E%E9%AA%91%E5%A3%AB/</link>
      <pubDate>Sat, 04 Dec 2021 11:06:11 +0000</pubDate>
      
      <guid>https://blog.jk2077.com/posts/%E7%A9%BA%E6%B4%9E%E9%AA%91%E5%A3%AB/</guid>
      <description> 近日，笔者重拾两年前购入的空洞骑士(对于一个手残路痴玩家，属实不算友好)。 但本着对游戏的喜欢。（以及听闻续作丝之歌近日将出，硬着头皮玩了下去）
游戏本身十分出色，无论是从游戏世界观、配乐画风都无可挑剔。
作为极具代表的硬核游戏之一，它不会像《死亡细胞》一样告诉玩家“菜就多练练”，也不会像《只狼》一般“让全世界学会中文”。
有的仅是形单影只，犹如泪水之城淅淅沥沥的雨声，是独往内心的孤独，是无可与人言说的空洞。
主角本应是空无一物的容器，在玩家手中最终成为从未畏强欺弱、直面黑暗出身、背负全境过往的勇士。 愿你我的生活皆可如此。 </description>
    </item>
    
  </channel>
</rss>
